name: build validate deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: setup docker buildx
      uses: docker/setup-buildx-action@v1

    - name: build backend image
      uses: docker/build-push-action@v2
      with:
        context: backend
        file: backend/Dockerfile
        tags: ${{ secrets.HEROKU_APPNAME }}/backend:staging
        outputs: type=docker,dest=/tmp/backend.tar

    - name: upload backend artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend_staging
        path: /tmp/backend.tar

  validate:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: setup docker buildx
      uses: docker/setup-buildx-action@v1

    - name: download backend artifact
      uses: actions/download-artifact@v2
      with:
        name: backend_staging
        path: /tmp
    
    - name: load backend image
      run: |
        docker load --input /tmp/backend.tar
        docker image ls

    - name: run backend container
      run: |
        docker run --rm -d -p 8080:8080 --name backend_staging ${{ secrets.HEROKU_APPNAME }}/backend:staging
        status=$(docker container inspect -f "{{.State.Status}}" backend_staging)
        if [ -z $status ] || [ $status != "running" ]; then
          echo "the backend container is not running"
          exit 1
        fi
      shell: sh {0}

    - name: run test
      run: docker exec backend_staging /app/validate.sh

    - name: always stop the container and never complain
      run: docker stop backend_staging
      if: ${{ always() }}
      shell: sh {0}

  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [build, validate]
    env:
      HEROKU_REGISTRY: registry.heroku.com

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: setup docker buildx
      uses: docker/setup-buildx-action@v1

    - name: download backend artifact
      uses: actions/download-artifact@v2
      with:
        name: backend_staging
        path: /tmp

    - name: load backend image
      run: |
        docker load --input /tmp/backend.tar
        docker image ls

    - name: tag backend image for heroku
      run: |
        docker tag ${{ secrets.HEROKU_APPNAME }}/backend:staging ${{ env.HEROKU_REGISTRY }}/${{ secrets.HEROKU_APPNAME }}/web:latest
        docker image ls

    - name: login heroku registry
      run: echo "${{ secrets.HEROKU_API_KEY }}" | docker login -u ${{ secrets.HEROKU_USER }} ${{ env.HEROKU_REGISTRY }} --password-stdin

    - name: push backend image to heroku registry
      run: |
        docker image push ${{ env.HEROKU_REGISTRY }}/${{ secrets.HEROKU_APPNAME }}/web:latest

    - name: deploy backend image to the application
      run: |
        HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }} heroku container:release web -a ${{ secrets.HEROKU_APPNAME }}

    - name: always logout from heroku registry and never complain
      run: docker logout ${{ env.HEROKU_REGISTRY }}
      if: ${{ always() }}
      shell: sh {0}